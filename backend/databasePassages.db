{"id":3,"locId":3,"passage":" that permits selection among graphical objects such as icons, buttons, menu items, or hypertext links. HCI researchers realized only recently that interface designers can pursue a more ambitious goal than just making pointing to a graphical object as easy as pointing to a real-life object: the emerging ","annotation":"ihkbkh","fileId":1,"startIndex":"9,0","endIndex":"9,0","startOffset":271,"endOffset":576,"yPosition":0,"_id":"80Zbvm1Bu7e2Tl9k"}
{"id":0,"locId":0,"passage":"d personal digital assistants (PDAs), tablet computers, and wall-size displays (e.g., Liveboard, Elrod et al., 1992; Smartboard, http://www.smarttech.com), touch and pen input have gained popularity. Over the past years, more complex display systems have been created by combining multiple such display units. Wall-size touch displays have been combined into display walls, such as the DynaWall (Streitz 2001), or the iRoom Smartboard wall (Johanson, 2002b). Recent PDAs and tablet computers allow connecting additional displays, such as another tablet or a monitor in order to extend the device’s internal display space.\n\nTouch/pen-operated screens that consist of multiple display units bring up a new class of input challenges that cannot always be solved with existing techniques, because many of the existing techniques were designed for indirect input devices, such as mice, track pads, or joysticks. Indirect input devices can be used on arbitrary display configurations, because they can simply be mapped to the respective topology (e.g., PointRight, Johanson 2002a). Touch/ pen input, however, is based on the immediate correspondence between input space and display space and thus requires users to adapt their input behavior to the physicality of the display system. Here are three examples w","annotation":"uihkbh","fileId":0,"startIndex":"11,0","endIndex":"12,0","startOffset":44,"endOffset":680,"yPosition":0,"_id":"Fw5Ra3FiFmlHLbqf"}
{"id":1,"locId":1,"passage":"s the user’s current cursor location, thereby allowing the user to interact with these icons using comparably small hand movements. Drag-and-Pick extends the drag-and-pop interaction style such that it allows activating icons, e.g., to open folders or launch applications. In this paper, we report the results of a user study comparing drag-and-pop with traditional drag-and-drop on a 15’ (4.50m) wide interactive display wall. Participants where able to file icons up","annotation":"bkjbk ","fileId":0,"startIndex":"7,0","endIndex":"7,0","startOffset":486,"endOffset":954,"yPosition":0,"_id":"evpOwDq613dpM8Rv"}
{"id":2,"locId":2,"passage":"uman-computer interaction (HCI), sustained efforts have been made to optimize pointing, the key elemental act that permits selection among graphical objects such as icons, buttons, menu items, or hypertext links. HCI researchers realized only recently that interface designers can pursue a more ambitious goal than just making pointing to a graphical object as easy as pointing to a real-life object: the emerging challenge is to make pointing in GUIs easier than normal [4, 5, 8, 14, 17]. It has been known, from the beginning of the WIMP era [6] that target acquisition time (or movement time, MT) in GUIs is almost entirely determined by the ratio of target distance D and target width W, as stated by Fitts’ law [7, 15]: MT = a + b log2 (D/W +1), with a and b standing for empirically adjustable coefficients (b>0) and the expression log2(D/W +1) defining what Fitts termed the index of difficulty (ID). Equation 1 suggests two non-exclusive ways of facilitating target acquisition in a GUI, both of which have been recently investigated in HCI research. One is to reduce D. If, as soon as the system detects cursor motion, it helps by shifting the set of objects that is likely to include the target toward the approaching cursor, the numerator of Equation 1 drops. This is the solution investigated in the Drag-and-Pop technique [4]. Second, the system may expand whatever object is being approached by the cursor, thus increasing W and hence reducing the ID. With this solution, implemented in the Mac OS X Dock,1 performance can be facilitated even if the expansion is very late [14,17].\n\nSemantic pointing [5], a more recent treatment of the pointing facilitation problem, simultaneously attacks the numerator and the denominator of the D/W ratio. The display-control (DC) ratio linking cursor motion to mouse motion is made to depend on cursor position across the landscape of graphical objects: the default DC ratio being set to a ","annotation":"uhuik","fileId":1,"startIndex":"9,0","endIndex":"10,0","startOffset":162,"endOffset":345,"yPosition":0,"_id":"pAJeWpvWc63IBsXh"}
